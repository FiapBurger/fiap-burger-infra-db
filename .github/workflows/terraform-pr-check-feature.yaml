name: Feature

on:
  push:
    branches:
      - 'feature/**'
permissions:
  pull-requests: write

jobs:
  terraform-format:
    name: Check Terraform Format
    runs-on: ubuntu-latest
    env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        

  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      - name: Terraform Init
        run: terraform init


      - name: Terraform Plan
        run: terraform plan -parallelism=40

  createPullRequest:
    runs-on: ubuntu-latest
    needs: terraform-plan
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      
      - name: extract git commit data
        uses: rlespinasse/git-commit-data-action@v1.x

      - name: Update author information
        run: echo ${{ env.GIT_COMMIT_AUTHOR_NAME }} > AUTHOR
      
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          branch: ${{ github.ref }}
          base: main
          title: "autoated-pr"
          committer: ${{ env.GIT_COMMIT_AUTHOR_NAME }} <${{ env.GIT_COMMIT_AUTHOR_EMAIL }}>
          author: ${{ env.GIT_COMMIT_AUTHOR_NAME }} <${{ env.GIT_COMMIT_AUTHOR_EMAIL }}>
          body: |
            This is to show automatic PR creation
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          delete-branch: false

      - name: PR url
        run: |
          echo "Pull Request URL - ${{ steps.create_pr.outputs.pull-request-url }}"
          echo "Deploying to production server on branch $GITHUB_REF"
